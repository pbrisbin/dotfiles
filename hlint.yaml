---
- ignore:
    # I find this most-often leads to less readable code, for example:
    #
    # Compare the cognitive over of:
    #
    #   Use roEnabled, defaulting to True:
    #
    #     { rEnabled = fromMaybe True roEnabled
    #
    #   The "fixed" version, is roEnabled not presently-False?
    #
    #     { rEnabled = Just False /= roEnabled
    #
    name: Use Just
- ignore:
    # I find this hint is overwhelmingly false-positives
    name: Reduce duplication
- ignore:
    # It's common to leave a redundant do in spec, describe, it to reduce diff
    # noise when specifications, contexts, and examples are inevitably added.
    name: Redundant do
    within: spec
- ignore:
    # Gets confused my Database.Esqueleto.(^.) vs Control.Lens.(^.)
    name: Redundant ^.
- arguments:
  # Typical extensions
  - -XBangPatterns
  - -XDataKinds
  - -XDeriveAnyClass
  - -XDeriveFoldable
  - -XDeriveFunctor
  - -XDeriveGeneric
  - -XDeriveLift
  - -XDeriveTraversable
  - -XDerivingStrategies
  - -XFlexibleContexts
  - -XFlexibleInstances
  - -XGADTs
  - -XGeneralizedNewtypeDeriving
  - -XLambdaCase
  - -XMultiParamTypeClasses
  - -XNoImplicitPrelude
  - -XNoMonomorphismRestriction
  - -XOverloadedStrings
  - -XRankNTypes
  - -XRecordWildCards
  - -XScopedTypeVariables
  - -XStandaloneDeriving
  - -XTypeApplications
  - -XTypeFamilies

  # Avoid reserved word issue
  - -XNoStaticPointers
