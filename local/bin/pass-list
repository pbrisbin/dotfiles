#!/usr/bin/env stack
-- stack script --resolver lts-18.14
-- vim: ft=haskell
--
-- Like `pass list', but in non-tree output, for easier grepping.
--
{-# OPTIONS_GHC -Wall -Werror #-}

module Main (main) where

import Data.List (sort, stripPrefix)
import Data.Maybe (fromMaybe)
import System.Environment (getEnv)
import System.FilePath (dropExtension, (</>))
import System.Process (readProcess)

main :: IO ()
main = do
    store <- (</> ".password-store/") <$> getEnv "HOME"

    mapM_ putStrLn . sort . map (dropExtension . dropPrefix store) . lines
        =<< readProcess "find" [store, "-type", "f", "-name", "*.gpg"] ""

dropPrefix :: Eq a => [a] -> [a] -> [a]
dropPrefix p x = fromMaybe x $ stripPrefix p x
